# Generated by Django 3.2 on 2021-04-20 07:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import runtest.models.version_field


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('runtest', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TestRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, editable=False, help_text='This row was created by this User', max_length=150, null=True, verbose_name='Created By')),
                ('created_on', models.DateTimeField(blank=True, editable=False, help_text='Created on this date and time', null=True, verbose_name='Created On')),
                ('updated_by', models.CharField(blank=True, editable=False, help_text='This row was last updated by this User', max_length=150, null=True, verbose_name='Updated By')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, help_text='Last updated on this date and time', null=True, verbose_name='Updated On')),
                ('last_version', runtest.models.version_field.VersionField(blank=True, default=0, null=True)),
                ('run_status', models.CharField(default='QUE', editable=False, help_text='Status of this test run', max_length=3, verbose_name='Run Status')),
                ('run_on', models.DateTimeField(editable=False, verbose_name='Run On')),
                ('exec_start_on', models.DateTimeField(editable=False, null=True, verbose_name='Execution Started On')),
                ('exec_end_on', models.DateTimeField(editable=False, null=True, verbose_name='Execution Ended On')),
                ('last_trade_no', models.PositiveIntegerField(default=0, editable=False, null=True, verbose_name='Last Trade No')),
                ('user_remarks', models.CharField(blank=True, help_text='Your notes about this run for future reference', max_length=400, null=True, verbose_name='Remarks')),
                ('stock_ticker', models.CharField(help_text='Stock to be selected for this backtest run', max_length=200, verbose_name='Stock Ticker')),
                ('start_date', models.DateField(help_text='Backtest to start from this date', verbose_name='Start Date')),
                ('end_date', models.DateField(help_text='Backtest to end on this date', verbose_name='End Date')),
                ('portfolio_start', models.DecimalField(decimal_places=2, help_text='Backtest will start with this initial portfolio amount', max_digits=15, verbose_name='Portfolio Start')),
                ('strategy_code', models.CharField(help_text='Strategy to use when triggering trades using Indicators', max_length=30, verbose_name='Strategy')),
                ('stop_loss', models.FloatField(help_text='Triggers sell when losses hit this level based on cost price', null=True, verbose_name='Stop Loss')),
                ('trail_stop_loss', models.FloatField(help_text='Triggers sell when losses hit this level based on current value', null=True, verbose_name='Trailing Stop Loss')),
                ('indicator_1_code', models.CharField(blank=True, help_text='Indicator 1 used for this backtest run', max_length=30, null=True, verbose_name='Indicator 1')),
                ('ind_1_param_1', models.IntegerField(null=True, verbose_name='Ind#1 Param 1')),
                ('ind_1_param_2', models.IntegerField(null=True, verbose_name='Ind#1 Param 2')),
                ('ind_1_param_3', models.IntegerField(null=True, verbose_name='Ind#1 Param 3')),
                ('indicator_2_code', models.CharField(blank=True, help_text='Indicator 2 used for this backtest run', max_length=30, null=True, verbose_name='Indicator 2')),
                ('ind_2_param_1', models.IntegerField(null=True, verbose_name='Ind#2 Param 1')),
                ('ind_2_param_2', models.IntegerField(null=True, verbose_name='Ind#2 Param 2')),
                ('ind_2_param_3', models.IntegerField(null=True, verbose_name='Ind#2 Param 3')),
                ('indicator_3_code', models.CharField(blank=True, help_text='Indicator 3 used for this backtest run', max_length=30, null=True, verbose_name='Indicator 3')),
                ('ind_3_param_1', models.IntegerField(null=True, verbose_name='Ind#3 Param 1')),
                ('ind_3_param_2', models.IntegerField(null=True, verbose_name='Ind#3 Param 2')),
                ('ind_3_param_3', models.IntegerField(null=True, verbose_name='Ind#3 Param 3')),
                ('sizing_method', models.CharField(blank=True, help_text='Trade Sizing method decides how much to trade', max_length=30, null=True, verbose_name='Sizing Method')),
                ('trade_size', models.IntegerField(help_text='Number of shares or Amount to trade', null=True, verbose_name='Trade Size')),
                ('portfolio_end', models.DecimalField(decimal_places=2, editable=False, help_text='Portfolio Amount when Backtest Ends', max_digits=15, verbose_name='Portfolio End')),
                ('win_trades', models.PositiveIntegerField(editable=False, help_text='Number of winning trades made', null=True, verbose_name='Winning Trades')),
                ('lose_trades', models.PositiveIntegerField(editable=False, help_text='Number of losing trades made', null=True, verbose_name='Losing Trades')),
                ('avg_win_amount', models.DecimalField(decimal_places=2, editable=False, help_text='Average winning amount per trade', max_digits=15, verbose_name='Average Win')),
                ('avg_loss_amount', models.DecimalField(decimal_places=2, editable=False, help_text='Average losing amount per trade', max_digits=15, verbose_name='Average Loss')),
                ('sharpe_ratio', models.FloatField(editable=False, null=True, verbose_name='Sharpe Ratio')),
                ('sqn_no', models.FloatField(editable=False, null=True, verbose_name='SQN No')),
                ('run_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'test_run',
                'unique_together': {('run_by', 'run_on')},
            },
        ),
        migrations.CreateModel(
            name='TestRunResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, editable=False, help_text='This row was created by this User', max_length=150, null=True, verbose_name='Created By')),
                ('created_on', models.DateTimeField(blank=True, editable=False, help_text='Created on this date and time', null=True, verbose_name='Created On')),
                ('updated_by', models.CharField(blank=True, editable=False, help_text='This row was last updated by this User', max_length=150, null=True, verbose_name='Updated By')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, help_text='Last updated on this date and time', null=True, verbose_name='Updated On')),
                ('last_version', runtest.models.version_field.VersionField(blank=True, default=0, null=True)),
                ('trade_no', models.PositiveIntegerField(verbose_name='Trade No')),
                ('trade_date', models.DateField(verbose_name='Trade Date')),
                ('stock_ticker', models.CharField(max_length=30, verbose_name='Stock Ticker')),
                ('buy_flag', models.CharField(max_length=1, verbose_name='Buy Flag (B/S)')),
                ('trade_quantity', models.PositiveIntegerField(verbose_name='Trade Quantity')),
                ('trade_price', models.DecimalField(decimal_places=5, max_digits=15, verbose_name='Traded Price')),
                ('trade_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Trade Amount')),
                ('avg_sell_price', models.DecimalField(decimal_places=5, max_digits=15, verbose_name='Average Sell Price')),
                ('sell_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Sell Amount')),
                ('win_flag', models.BooleanField(null=True, verbose_name='Winning Trade?')),
                ('test_run', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='runtest.testrun', verbose_name='Test Run')),
            ],
            options={
                'db_table': 'test_run_result',
                'unique_together': {('test_run', 'trade_no')},
            },
        ),
    ]
